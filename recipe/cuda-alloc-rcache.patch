diff --git a/src/ucs/Makefile.am b/src/ucs/Makefile.am
index b612ddeb5..850be0e53 100644
--- a/src/ucs/Makefile.am
+++ b/src/ucs/Makefile.am
@@ -9,9 +9,9 @@ AUTOMAKE_OPTIONS    = nostdinc # avoid collision with built-in debug.h
 lib_LTLIBRARIES     = libucs.la
 bin_PROGRAMS        =
 
-libucs_la_CPPFLAGS = $(BASE_CPPFLAGS) -DUCX_MODULE_DIR=\"$(moduledir)\"
-libucs_la_CFLAGS   = $(BASE_CFLAGS)
-libucs_la_LDFLAGS  = -ldl $(NUMA_LIBS) -version-info $(SOVERSION)
+libucs_la_CPPFLAGS = $(BASE_CPPFLAGS) $(CUDA_CPPFLAGS) -DUCX_MODULE_DIR=\"$(moduledir)\"
+libucs_la_CFLAGS   = $(BASE_CFLAGS) $(CUDA_CFLAGS)
+libucs_la_LDFLAGS  = -ldl $(CUDA_LDFLAGS) $(NUMA_LIBS) -version-info $(SOVERSION)
 libucs_ladir       = $(includedir)/ucs
 libucs_la_LIBADD   = $(LIBM) $(top_builddir)/src/ucm/libucm.la
 
diff --git a/src/ucs/memory/rcache.c b/src/ucs/memory/rcache.c
index 6ae0c8b01..263bfa658 100644
--- a/src/ucs/memory/rcache.c
+++ b/src/ucs/memory/rcache.c
@@ -19,6 +19,7 @@
 #include <ucs/sys/sys.h>
 #include <ucs/type/spinlock.h>
 #include <ucm/api/ucm.h>
+#include <cuda.h>
 
 #include "rcache.h"
 #include "rcache_int.h"
@@ -651,6 +652,30 @@ ucs_rcache_create_region(ucs_rcache_t *rcache, void *address, size_t length,
     ucs_pgt_addr_t start, end;
     ucs_status_t status;
     int error, merged;
+    ucs_memory_type_t mem_type;
+    CUdeviceptr pbase;
+    size_t psize;
+    unsigned value       = 1;
+    int is_managed       = 0;
+    CUresult cu_err;
+
+    mem_type = UCS_MEMORY_TYPE_HOST;
+
+    cu_err = cuPointerGetAttribute((void *)&value,
+                                   CU_POINTER_ATTRIBUTE_MEMORY_TYPE,
+                                   (CUdeviceptr)address);
+    if (cu_err == CUDA_SUCCESS) {
+        if (value == CU_MEMORYTYPE_DEVICE) {
+
+            cuPointerGetAttribute((void *)&is_managed,
+                                  CU_POINTER_ATTRIBUTE_IS_MANAGED,
+                                  (CUdeviceptr)address);
+            mem_type = (is_managed) ?
+                UCS_MEMORY_TYPE_CUDA_MANAGED : UCS_MEMORY_TYPE_CUDA;
+        } else {
+            mem_type = UCS_MEMORY_TYPE_LAST;
+        }
+    }
 
     ucs_trace_func("rcache=%s, address=%p, length=%zu", rcache->name, address,
                    length);
@@ -658,11 +683,24 @@ ucs_rcache_create_region(ucs_rcache_t *rcache, void *address, size_t length,
     pthread_rwlock_wrlock(&rcache->pgt_lock);
 
 retry:
-    /* Align to page size */
-    start  = ucs_align_down_pow2((uintptr_t)address,
-                                 rcache->params.alignment);
-    end    = ucs_align_up_pow2  ((uintptr_t)address + length,
-                                 rcache->params.alignment);
+
+    if (UCS_MEMORY_TYPE_CUDA == mem_type) {
+        if (CUDA_SUCCESS != cuMemGetAddressRange(&pbase, &psize, (CUdeviceptr) address)) {
+            return UCS_ERR_IO_ERROR;
+        }
+        address = (void *) pbase;
+        start  = ucs_align_down_pow2((uintptr_t)address,
+                rcache->params.alignment);
+        end    = ucs_align_up_pow2  ((uintptr_t)address + psize,
+                rcache->params.alignment);
+    } else {
+        /* Align to page size */
+        start  = ucs_align_down_pow2((uintptr_t)address,
+                rcache->params.alignment);
+        end    = ucs_align_up_pow2  ((uintptr_t)address + length,
+                rcache->params.alignment);
+    }
+
     region = NULL;
     merged = 0;
 
